# Copyright (c) 2015 The Middleware Authors, All rights reserved.

#-----------------------------------------------
# Uncomment exactly one of the lines labelled (A), (B), and (C) below
# to switch between compilation modes.

# (A) Production use (optimized mode)
OPT ?= -g -O2
# (B) Debug mode, w/ full line-level debugging symbols
# OPT ?= -g2
# (C) Profiling mode: opt, but w/debugging symbols
# OPT ?= -O2 -g2
#-----------------------------------------------

# Middleware custom opt (build mode)
BUILD_LEVEL ?= DEBUG
BUILD_OBJ ?= CloudSDK
BUILD_TEST ?= NO_TEST

HOME=/usr/local/middleware
LIBSECRYPTO=$(HOME)/lib/libsecrypto.so
LIBSQLITE=$(HOME)/lib/libsqlite3.so
LIBSNAPPY=$(HOME)/lib/libsnappy.so.1.3.0

# Detect what platform we're building on
$(shell CC="$(CC)" CXX="$(CXX)" TARGET_OS="$(TARGET_OS)" \
		BUILD_LEVEL="$(BUILD_LEVEL)" BUILD_OBJ="$(BUILD_OBJ)" BUILD_TEST="$(BUILD_TEST)" \
		./build_detect_platform build_config.mk ./)
# This file is generated by the previous line to set build flags and sources
include build_config.mk

CFLAGS += -I. -I./include $(PLATFORM_CCFLAGS) $(OPT)
CXXFLAGS += -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT)

LDFLAGS += $(PLATFORM_LDFLAGS)
LIBS += $(PLATFORM_LIBS) $(LIBSQLITE) $(LIBJSON) $(LIBSECRYPTO) $(LIBSNAPPY)

LIBOBJECTS = $(SOURCES:.cpp=.o)

LIBRARY = libmiddleware.so

default: all

all: check $(LIBRARY) clean
	cp -fr $(LIBRARY) $(HOME)/lib/

check:
	cd lib/ && tar zxvf libdependent.tar.gz
	if [ ! -d $(HOME)/lib ];then mkdir -p $(HOME)/lib;fi
	cp -fr lib/* $(HOME)/lib

clean:
	rm -fr src/*.o
	rm -fr lib/lib*.so*

$(LIBRARY): $(LIBOBJECTS)
	$(CXX) -o $(LIBRARY) $(LIBOBJECTS) $(LDFLAGS) $(LIBS)

# The rule how to make *.o
.c.o:
	$(CC) $(CFLAGS) -c $< -o $@
.cpp.o:
	$(CXX) $(CXXFLAGS) -c $< -o $@

